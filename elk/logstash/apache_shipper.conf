input {
  file { 
    path => "/var/log/httpd/*_log" 
    type => apache 

    # This format tells logstash to expect 'logstash' json events from the file.
    format => json_event 
  }
  file {
    path => "/opt/graphite/storage/log/webapp/*error.log"
    type => apache_error

    # This format tells logstash to expect 'logstash' json events from the file.
    format => json_event
  }
  file {
    path => "/opt/graphite/storage/log/webapp/*access.log"
    type => apache

    # This format tells logstash to expect 'logstash' json events from the file.
    format => json_event
  }
}

filter {
  if [path] =~ "access" {
    mutate { replace => { type => "apache_access" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  } else if [path] =~ "error" {
    mutate { replace => { type => "apache_error" } }
  } else {
    mutate { replace => { type => "random_logs" } }
  }
}

output {
	stdout { codec => rubydebug }
  redis { 
	host => "127.0.0.1" 
	data_type => "list" 
	key => "apache" 
	}
}

